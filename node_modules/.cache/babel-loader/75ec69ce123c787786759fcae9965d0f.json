{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { listDecks } from '../../utils/api/index';\n\nfunction DeckList() {\n  _s();\n\n  const [deckList, setDeckList] = useState([]);\n  useEffect(() => {\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n\n    async function loadDecks() {\n      const response = await listDecks(signal);\n      setDeckList(response);\n    }\n\n    loadDecks();\n    return () => {\n      abortController.abort();\n    };\n  }, []);\n}\n\n_s(DeckList, \"2X52pFzBtcHgOFuWcPHb6NwlmQg=\");\n\n_c = DeckList;\nexport default DeckList;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckList\");","map":{"version":3,"sources":["/Users/chris/Desktop/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/Home/DeckList.js"],"names":["React","useState","useEffect","listDecks","DeckList","deckList","setDeckList","abortController","AbortController","signal","loadDecks","response","abort"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,uBAA1B;;AAGA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBL,QAAQ,CAAC,EAAD,CAAvC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMK,eAAe,GAAG,IAAIC,eAAJ,EAAxB;AACA,UAAMC,MAAM,GAAGF,eAAe,CAACE,MAA/B;;AAEA,mBAAeC,SAAf,GAA2B;AACvB,YAAMC,QAAQ,GAAG,MAAMR,SAAS,CAACM,MAAD,CAAhC;AACAH,MAAAA,WAAW,CAACK,QAAD,CAAX;AACH;;AACDD,IAAAA,SAAS;AAET,WAAM,MAAM;AACRH,MAAAA,eAAe,CAACK,KAAhB;AACH,KAFD;AAGH,GAbQ,EAaP,EAbO,CAAT;AAcH;;GAjBQR,Q;;KAAAA,Q;AAmBT,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { listDecks } from '../../utils/api/index'\n\n\nfunction DeckList() {\n    const [deckList,setDeckList] = useState([])\n\n    useEffect(() => {\n        const abortController = new AbortController();\n        const signal = abortController.signal;\n\n        async function loadDecks() {\n            const response = await listDecks(signal);\n            setDeckList(response);\n        }\n        loadDecks();\n\n        return() => {\n            abortController.abort();\n        }\n    },[])\n}\n\nexport default DeckList;"]},"metadata":{},"sourceType":"module"}