{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Desktop/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/Study/StudyPage.js\",\n    _s = $RefreshSig$();\n\nimport { readDeck } from '../../utils/api';\nimport React, { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StudyPage() {\n  _s();\n\n  const [deck, setDeck] = useState({\n    cards: []\n  });\n  const [currentCard, setCurrentCard] = useState({\n    index: 0,\n    flipped: false\n  });\n  const {\n    deckId\n  } = useParams();\n  useEffect(() => {\n    readDeck(deckId).then(data => setDeck(data)).catch(err => console.log(err));\n  }, [deckId]);\n\n  function flipCard() {\n    serCurrentCard({ ...currentCard,\n      flipped: !currentCard.flipped\n    });\n  }\n\n  function nextCard() {\n    if (currentCard.index === deck.cards.length - 1) {\n      const performReset = window.confirm('Restart the cards?');\n\n      if (performReset) {\n        setCurrentCard({\n          index: 0,\n          flipped: false\n        });\n      }\n    } else {\n      setCurrentCard({ ...currentCard,\n        index: currentCard.index + 1,\n        flipped: false\n      });\n    }\n  }\n\n  const card = deck.cards[currentCard.index];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        \"aria-label\": \"breadcrumb\",\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"breadcrumb\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/decks/${deckId}`,\n              children: deck.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item active\",\n            \"aria-current\": \"page\",\n            children: \"Study\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Study: \", deck.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), card && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-title\",\n            children: [currentCard.index + 1, \" of \", deck.cards.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: currentCard.flipped ? card.back : card.front\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: flipCard,\n            className: \"btn btn-secondary\",\n            children: \"Flip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), currentCard.flipped && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: nextCard,\n            className: \"btn btn-primary\",\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(StudyPage, \"MHysV/qTWrLSw+zH6++ZBYoaEOc=\", false, function () {\n  return [useParams];\n});\n\n_c = StudyPage;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudyPage\");","map":{"version":3,"sources":["/Users/chris/Desktop/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/Study/StudyPage.js"],"names":["readDeck","React","useEffect","useState","useParams","Link","StudyPage","deck","setDeck","cards","currentCard","setCurrentCard","index","flipped","deckId","then","data","catch","err","console","log","flipCard","serCurrentCard","nextCard","length","performReset","window","confirm","card","name","back","front"],"mappings":"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","sourcesContent":["import { readDeck } from '../../utils/api';\nimport React, {useEffect, useState} from 'react';\nimport { useParams, Link } from 'react-router-dom';\n\nexport default function StudyPage() {\nconst [ deck, setDeck] = useState({cards: []});\nconst [currentCard, setCurrentCard] = useState({index: 0, flipped: false})\nconst { deckId } = useParams();\n\nuseEffect(() => {\n    readDeck(deckId)\n    .then(data => setDeck(data))\n    .catch(err => console.log(err))\n},[deckId]);\n\nfunction flipCard() {\n    serCurrentCard({ ...currentCard, flipped: !currentCard.flipped });\n}\n\nfunction nextCard() {\n    if (currentCard.index === deck.cards.length - 1) {\n        const performReset = window.confirm('Restart the cards?')\n        if (performReset) {\n            setCurrentCard({index: 0, flipped: false})\n        }\n    } else{\n    setCurrentCard({ ...currentCard, index: currentCard.index + 1, flipped: false});\n    }\n}\n\nconst card = deck.cards[currentCard.index];\n\n    return (\n        <div>\n            <header>\n                <nav aria-label='breadcrumb'>\n                    <ol className='breadcrumb'>\n                        <li className='breadcrumb-item'>\n                            <Link to='/'>Home</Link>\n                        </li>\n                        <li className='breadcrumb-item'>\n                            <Link to={`/decks/${deckId}`}>{deck.name}</Link>\n                        </li>\n                        <li className='breadcrumb-item active' aria-current='page'>\n                            Study\n                        </li>\n                    </ol>\n                </nav>\n\n                <h1>Study: {deck.name}</h1>\n                {card &&\n                <div className='card'>\n                    <div className='card-body'>\n                        <h5 className='card-title'>{currentCard.index + 1} of {deck.cards.length}</h5>\n                        <p className='card-text'>{currentCard.flipped? card.back: card.front}</p>\n                        <button onClick={flipCard} className='btn btn-secondary'>Flip</button>\n                        {   currentCard.flipped && \n                            <button onClick={nextCard} className='btn btn-primary'>Next</button>\n                        }\n                    </div>\n                </div>\n                }\n            </header>\n        </div>\n    );\n};"]},"metadata":{},"sourceType":"module"}