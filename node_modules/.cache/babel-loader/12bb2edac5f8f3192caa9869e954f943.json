{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Desktop/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/Cards/EditCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { readCard, readDeck, updateCard } from \"../../utils/api\";\nimport { useParams, Link } from \"react-router-dom\";\nimport CardShape from \"./CardShape\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CardEdit() {\n  _s();\n\n  const history = useHistory();\n  useEffect(() => {\n    readDeck(deckId).then(data => setDeck(data)).catch(err => console.log(err));\n  }, [deckId]);\n  const {\n    deckId,\n    cardId\n  } = useParams();\n  const [card, setCard] = useState();\n  useEffect(loadCard, [cardId]);\n\n  function loadCard() {\n    readCard(cardId).then(setCard);\n  }\n\n  async function submitHandler(card) {\n    await updateCard(card).then(() => {\n      history.push(`/decks/${deckId}`);\n    });\n  }\n\n  const renderForm = card ? /*#__PURE__*/_jsxDEV(CardShape, {\n    onSubmit: submitHandler,\n    initialState: card\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      \"aria-label\": \"breadcrumb\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"breadcrumb\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"oi oi-home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 21\n            }, this), \" Home\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/decks/${deckId}`,\n            children: deck.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item active\",\n          \"aria-current\": \"page\",\n          children: \"Add Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), renderForm]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CardEdit, \"FNajXRGh3CB201c96zEGmoMFSNc=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = CardEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardEdit\");","map":{"version":3,"sources":["/Users/chris/Desktop/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/Cards/EditCard.js"],"names":["React","useEffect","useState","useHistory","readCard","readDeck","updateCard","useParams","Link","CardShape","CardEdit","history","deckId","then","data","setDeck","catch","err","console","log","cardId","card","setCard","loadCard","submitHandler","push","renderForm","deck","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,QAAT,EAAmBC,QAAnB,EAA6BC,UAA7B,QAA+C,iBAA/C;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,kBAAhC;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAG/B,QAAMC,OAAO,GAAGR,UAAU,EAA1B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,QAAQ,CAACO,MAAD,CAAR,CACCC,IADD,CACMC,IAAI,IAAIC,OAAO,CAACD,IAAD,CADrB,EAECE,KAFD,CAEOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFd;AAGH,GAJQ,EAIP,CAACL,MAAD,CAJO,CAAT;AAMA,QAAM;AAAEA,IAAAA,MAAF;AAAUQ,IAAAA;AAAV,MAAqBb,SAAS,EAApC;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBpB,QAAQ,EAAhC;AAEAD,EAAAA,SAAS,CAACsB,QAAD,EAAW,CAACH,MAAD,CAAX,CAAT;;AAEA,WAASG,QAAT,GAAoB;AAChBnB,IAAAA,QAAQ,CAACgB,MAAD,CAAR,CAAiBP,IAAjB,CAAsBS,OAAtB;AACH;;AAED,iBAAeE,aAAf,CAA6BH,IAA7B,EAAmC;AAC/B,UAAMf,UAAU,CAACe,IAAD,CAAV,CAAiBR,IAAjB,CAAsB,MAAM;AAC9BF,MAAAA,OAAO,CAACc,IAAR,CAAc,UAASb,MAAO,EAA9B;AACH,KAFK,CAAN;AAGH;;AAED,QAAMc,UAAU,GAAGL,IAAI,gBACnB,QAAC,SAAD;AAAW,IAAA,QAAQ,EAAEG,aAArB;AAAoC,IAAA,YAAY,EAAEH;AAAlD;AAAA;AAAA;AAAA;AAAA,UADmB,gBAGnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHJ;AAOA,sBACI;AAAA,4BACI;AAAK,oBAAW,YAAhB;AAAA,6BACI;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA,iCACA,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,GAAT;AAAA,oCACA;AAAM,cAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,oBADA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA,iCACA,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,UAAST,MAAO,EAA3B;AAAA,sBAA+Be,IAAI,CAACC;AAApC;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBANJ,eASI;AAAI,UAAA,SAAS,EAAC,wBAAd;AAAuC,0BAAa,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,EAgBKF,UAhBL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;;GArDuBhB,Q;UAGJP,U,EAQWI,S;;;KAXPG,Q","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { readCard, readDeck, updateCard } from \"../../utils/api\";\nimport { useParams, Link } from \"react-router-dom\";\nimport CardShape from \"./CardShape\";\n\nexport default function CardEdit() {\n\n\n    const history = useHistory();\n\n    useEffect(() => {\n        readDeck(deckId)\n        .then(data => setDeck(data))\n        .catch(err => console.log(err))\n    },[deckId]);\n\n    const { deckId, cardId } = useParams();\n    const [card, setCard] = useState();\n\n    useEffect(loadCard, [cardId]);\n\n    function loadCard() {\n        readCard(cardId).then(setCard);\n    }\n\n    async function submitHandler(card) {\n        await updateCard(card).then(() => {\n            history.push(`/decks/${deckId}`)\n        })\n    }\n\n    const renderForm = card ? (\n        <CardShape onSubmit={submitHandler} initialState={card}/>\n    ) : (\n        <p>Loading...</p>\n    );\n    \n\n    return (\n        <div>\n            <nav aria-label=\"breadcrumb\">\n                <ol className=\"breadcrumb\">\n                    <li className=\"breadcrumb-item\">\n                    <Link to=\"/\">\n                    <span className=\"oi oi-home\" /> Home\n                    </Link>\n                    </li>\n                    <li className='breadcrumb-item'>\n                    <Link to={`/decks/${deckId}`}>{deck.name}</Link>\n                    </li>\n                    <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                    Add Card\n                    </li>\n                </ol>\n            </nav>\n            {renderForm}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}