{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Desktop/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/Home/Deck.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { readDeck, listCards, createCard, readCard } from '../../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Deck() {\n  _s();\n\n  const [deck, setDeck] = useState({\n    cards: []\n  });\n  const {\n    deckId\n  } = useParams();\n\n  function getDeck() {\n    readDeck(deckId).then(setDeck);\n  }\n\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Hello World\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Deck, \"TswaV8AXaSP3HlgfOEXes32F6wc=\", false, function () {\n  return [useParams];\n});\n\n_c = Deck;\n\nvar _c;\n\n$RefreshReg$(_c, \"Deck\");","map":{"version":3,"sources":["/Users/chris/Desktop/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/Home/Deck.js"],"names":["React","useEffect","useState","useParams","readDeck","listCards","createCard","readCard","Deck","deck","setDeck","cards","deckId","getDeck","then"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SACIC,QADJ,EAEIC,SAFJ,EAGIC,UAHJ,EAIIC,QAJJ,QAKS,iBALT;;AAOA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC3B,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAmBR,QAAQ,CAAC;AAACS,IAAAA,KAAK,EAAE;AAAR,GAAD,CAAjC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAaT,SAAS,EAA5B;;AAEA,WAASU,OAAT,GAAmB;AACfT,IAAAA,QAAQ,CAACQ,MAAD,CAAR,CACCE,IADD,CACMJ,OADN;AAEH;;AAEDT,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEP,EAFO,CAAT;AAIA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;GAhBuBO,I;UAEDL,S;;;KAFCK,I","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { useParams } from 'react-router-dom';\nimport { \n    readDeck, \n    listCards, \n    createCard, \n    readCard, }\n    from '../../utils/api';\n    \nexport default function Deck() {\n    const [ deck, setDeck] = useState({cards: []});\n    const { deckId } = useParams();\n\n    function getDeck() {\n        readDeck(deckId)\n        .then(setDeck)\n    }\n\n    useEffect(() => {\n\n    },[])\n\n    return (\n        <h1>Hello World</h1>\n    )\n}"]},"metadata":{},"sourceType":"module"}