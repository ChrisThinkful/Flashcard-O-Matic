{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Desktop/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/Cards/EditCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { readCard, updateCard } from \"../utils/api\";\nimport { useParams } from \"react-router-dom\";\nimport CardShape from \"./CardShape\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CardEdit() {\n  _s();\n\n  const history = useHistory();\n  const {\n    deckId,\n    cardId\n  } = useParams();\n  const [card, setCard] = useState();\n  useEffect(loadCard, [cardId]);\n\n  function loadCard() {\n    readCard(cardId).then(setCard);\n  }\n\n  async function submitHandler(card) {\n    await updateCard(card).then(() => {\n      history.push(`/decks/${deckId}`);\n    });\n  }\n\n  const renderForm = card ? /*#__PURE__*/_jsxDEV(CardForm, {\n    onSubmit: submitHandler,\n    initialState: card\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), renderForm]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CardEdit, \"OTGKyJ9m+F2SfRGUGsi0cVAveko=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = CardEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardEdit\");","map":{"version":3,"sources":["/Users/chris/Desktop/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/Cards/EditCard.js"],"names":["React","useEffect","useState","useHistory","readCard","updateCard","useParams","CardShape","CardEdit","history","deckId","cardId","card","setCard","loadCard","then","submitHandler","push","renderForm"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,cAArC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAE/B,QAAMC,OAAO,GAAGN,UAAU,EAA1B;AAEA,QAAM;AAAEO,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAqBL,SAAS,EAApC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,EAAhC;AAEAD,EAAAA,SAAS,CAACa,QAAD,EAAW,CAACH,MAAD,CAAX,CAAT;;AAEA,WAASG,QAAT,GAAoB;AAChBV,IAAAA,QAAQ,CAACO,MAAD,CAAR,CAAiBI,IAAjB,CAAsBF,OAAtB;AACH;;AAED,iBAAeG,aAAf,CAA6BJ,IAA7B,EAAmC;AAC/B,UAAMP,UAAU,CAACO,IAAD,CAAV,CAAiBG,IAAjB,CAAsB,MAAM;AAC9BN,MAAAA,OAAO,CAACQ,IAAR,CAAc,UAASP,MAAO,EAA9B;AACH,KAFK,CAAN;AAGH;;AAED,QAAMQ,UAAU,GAAGN,IAAI,gBACnB,QAAC,QAAD;AAAU,IAAA,QAAQ,EAAEI,aAApB;AAAmC,IAAA,YAAY,EAAEJ;AAAjD;AAAA;AAAA;AAAA;AAAA,UADmB,gBAGnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHJ;AAOA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKM,UAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAhCuBV,Q;UAEJL,U,EAEWG,S;;;KAJPE,Q","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { readCard, updateCard } from \"../utils/api\";\nimport { useParams } from \"react-router-dom\";\n\nimport CardShape from \"./CardShape\";\n\nexport default function CardEdit() {\n\n    const history = useHistory();\n\n    const { deckId, cardId } = useParams();\n    const [card, setCard] = useState();\n\n    useEffect(loadCard, [cardId]);\n\n    function loadCard() {\n        readCard(cardId).then(setCard);\n    }\n\n    async function submitHandler(card) {\n        await updateCard(card).then(() => {\n            history.push(`/decks/${deckId}`)\n        })\n    }\n\n    const renderForm = card ? (\n        <CardForm onSubmit={submitHandler} initialState={card}/>\n    ) : (\n        <p>Loading...</p>\n    );\n    \n\n    return (\n        <div>\n            <h2>Edit Card</h2>\n            {renderForm}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}